///////////////////////////////////// 1.1
-- Student Table
CREATE TABLE Student (
    admission_no INT PRIMARY KEY,
    stud_name VARCHAR(50) NOT NULL
);
Query OK, 1 row affected (0.00 sec)
-- Membership Table
CREATE TABLE Membership (
    member_id INT PRIMARY KEY,
    admission_no INT,
    FOREIGN KEY (admission_no) REFERENCES Student(admission_no)
);
Query OK, 1 row affected (0.00 sec)
-- BookType Table
CREATE TABLE BookType (
    type_id INT PRIMARY KEY,
    type VARCHAR(30) NOT NULL
);
Query OK, 1 row affected (0.00 sec)
-- Book Table
CREATE TABLE Book (
    book_id INT PRIMARY KEY,
    book_name VARCHAR(50) NOT NULL,
    author VARCHAR(50),
    book_type INT,
    FOREIGN KEY (book_type) REFERENCES BookType(type_id)
);
Query OK, 1 row affected (0.00 sec)
-- BookIssue Table
CREATE TABLE BookIssue (
    issue_id INT PRIMARY KEY,
    issue_date DATE NOT NULL,
    member_id INT,
    book_id INT,
    FOREIGN KEY (member_id) REFERENCES Membership(member_id),
    FOREIGN KEY (book_id) REFERENCES Book(book_id)
);
Query OK, 1 row affected (0.00 sec)
///////////////////////////////////////////1.1
INSERT INTO Student VALUES 
(101, 'Alice'),
(102, 'Bob'),
(103, 'Charlie');

Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

INSERT INTO Membership VALUES
(1, 101),
(2, 102);
Query OK, 2 rows affected (0.01 sec)
Records: 2  Duplicates: 0  Warnings: 0

INSERT INTO BookType VALUES
(1, 'Fiction'),
(2, 'Non-Fiction'),
(3, 'Science');
Query OK, 3 rows affected (0.01 sec)
Records: 3  Duplicates: 0  Warnings: 0

INSERT INTO BookIssue VALUES
(301, '2025-09-10', 1, 201),
(302, '2025-09-12', 2, 202);
Query OK, 2 rows affected (0.01 sec)
Records: 2  Duplicates: 0  Warnings: 0
/////////////////////////////////////////////////1.2
ALTER TABLE Student ADD programme VARCHAR(50);

+--------------+-------------+------+-----+---------+-------+
| Field        | Type        | Null | Key | Default | Extra |
+--------------+-------------+------+-----+---------+-------+
| admission_no | int         | NO   | PRI | NULL    |       |
| stud_name    | varchar(50) | NO   |     | NULL    |       |
| programme    | varchar(50) | YES  |     | NULL    |       |
+--------------+-------------+------+-----+---------+-------+
////////////////////1.3
ALTER TABLE Book MODIFY book_name VARCHAR(100);
ALTER TABLE Book MODIFY author VARCHAR(80);
+-----------+--------------+------+-----+---------+-------+
| Field     | Type         | Null | Key | Default | Extra |
+-----------+--------------+------+-----+---------+-------+
| book_id   | int          | NO   | PRI | NULL    |       |
| book_name | varchar(100) | NO   |     | NULL    |       |
| author    | varchar(80)  | YES  |     | NULL    |       |
| book_type | int          | YES  | MUL | NULL    |       |
+-----------+--------------+------+-----+---------+-------+
//////////////////////1.4
ALTER TABLE Book DROP FOREIGN KEY book_ibfk_1;
DROP TABLE BookType;
+------------------+
| Tables_in_library|
+------------------+
| Student          |
| Membership       |
| Book             |
| BookIssue        |
+------------------+


mysql> CREATE TABLE Dependent (
    -> EmployeeID INT,
    -> DependName VARCHAR(50) NOT NULL,
    -> Sex VARCHAR(10),
    -> BirthDate DATE,
    -> Relationship Varchar(50),
    -> PRIMARY KEY(EmployeeID,DependName),
    -> FOREIGN KEY(EmployeeID) REFERENCES Employee(EmployeeID)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> show tables;
+-------------------+
| Tables_in_ayushv2 |
+-------------------+
| department        |
| dependent         |
| deptlocations     |
| employee          |
| project           |
| works_on          |
+-------------------+
6 rows in set (0.00 sec)

mysql> desc department;
+----------------+-------------+------+-----+---------+-------+
| Field          | Type        | Null | Key | Default | Extra |
+----------------+-------------+------+-----+---------+-------+
| Dname          | varchar(20) | NO   | UNI | NULL    |       |
| Dnumber        | int(11)     | NO   | PRI | NULL    |       |
| ManagerID      | int(11)     | YES  | MUL | NULL    |       |
| Mgr_start_date | date        | NO   |     | NULL    |       |
+----------------+-------------+------+-----+---------+-------+
4 rows in set (0.00 sec)
////////////////////////////2.1
mysql> insert into Department (Dname,Dnumber,ManagerID,Mgr_start_date) values ('Computer Science',D1,101,'2021-01-01');
Query OK, 1 row affected (0.00 sec)
mysql> select * from department;
+------------------+---------+-----------+----------------+
| Dname            | Dnumber | ManagerID | Mgr_start_date |
+------------------+---------+-----------+----------------+
| Computer Science | D1      |       101 | 2021-01-01     |
| HR               | D2      |       102 | 2022-06-10     |
| Finance          | D3      |       103 | 2023-03-15     |
| Sales            | D4      |       104 | 2023-05-01     |
| R&D              | D5      |       105 | 2023-07-20     |
+------------------+---------+-----------+----------------+
5 rows in set (0.01 sec)
////////////////////////////2.2
mysql> insert into Employee(Name, EmployeeID, BirthDate,HouseName, Gender, Salary, SuperEID, Dnumber)
    -> values
    -> ('Alice',101,'1990-01-10', 'Rose Villa', 'Female', 12000, NULL,D1),
    -> ('Bob',102,'1988-02-20', 'Sunset House', 'Male', 11000, 101,D1),
    -> ('Charlie',103,'1992-07-12', 'Lakeview', 'Male', 9000, 101,D2);
Query OK, 3 rows affected, 3 warnings (0.45 sec)
Records: 3  Duplicates: 0  Warnings: 3
////////////////////////////2.3
mysql> UPDATE Employee
    -> SET Salary = 15000
    -> WHERE Salary > 10000;
Query OK, 2 rows affected (0.00 sec)
Rows matched: 2  Changed: 2  Warnings: 0

mysql> select * from Employee;
+-----------+------------+------------+--------------+--------+--------+----------+---------+
| Name      | EmployeeID | BirthDate  | HouseName    | Gender | Salary | SuperEID | Dnumber |
+-----------+------------+------------+--------------+--------+--------+----------+---------+
| Alice     |        101 | 1990-01-10 | Rose Villa   | Female |  15000 |     NULL |      D1 |
| Bob       |        102 | 1988-02-20 | Sunset House | Male   |  15000 |      101 |      D1 |
| Charlie   |        103 | 1989-07-12 | Lakeview     | Male   |   9000 |      101 |      D2 |
+-----------+------------+------------+--------------+--------+--------+----------+---------+
3 rows in set (0.00 sec)

/////////////2.4
+-------------+---------+-----------+---------+
| Pname       | Pnumber | Plocation | Dnumber |
+-------------+---------+-----------+---------+
| IntelliSys  | P1      | Bangalore | D1 |
| Cloud Infra | P2      | Mumbai    | D2 |
| TestProj    | P3      | Cochin    | D1 |
+-------------+---------+-----------+---------+

mysql> UPDATE Project
    -> SET Dnumber = 'D2'
    -> WHERE Pnumber = 'P1' AND Dnumber = 'D1';
Query OK, 0 rows affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0
+-------------+---------+-----------+---------+
| Pname       | Pnumber | Plocation | Dnumber |
+-------------+---------+-----------+---------+
| IntelliSys  | P1      | Bangalore | D2      |
| Cloud Infra | P2      | Mumbai    | D2      |
| TestProj    | P3      | Cochin    | D1      |
+-------------+---------+-----------+---------+


//////////////////////////////////2.5

mysql> INSERT INTO Works_on (EmployeeID, Pnumber, Hours)
    -> VALUES (101, 'P1', 7);
Query OK, 1 row affected (0.01 sec)

mysql> select * from works_on;
+------------+---------+-------+
| EmployeeID | Pnumber | Hours |
+------------+---------+-------+
|        102 | P2      |  8.00 |
|        103 | P2      | 12.00 |
|        102 | P3      |  5.00 |
|        101 | P1      |  7.00 |
+------------+---------+-------+
4 rows in set (0.00 sec)

mysql> DELETE FROM Works_on
    -> WHERE Pnumber = 'P1';
Query OK, 1 row affected (0.00 sec)

mysql> select * from works_on;
+------------+---------+-------+
| EmployeeID | Pnumber | Hours |
+------------+---------+-------+
|        102 | P2      |  8.00 |
|        103 | P2      | 12.00 |
|        102 | P3      |  5.00 |
+------------+---------+-------+
3 rows in set (0.00 sec)
////////////////3.1
mysql> SELECT * FROM Employee order by salary asc;
+---------+------------+------------+--------------+--------+--------+----------+---------+
| Name    | EmployeeID | BirthDate  | HouseName    | Gender | Salary | SuperEID | Dnumber |
+---------+------------+------------+--------------+--------+--------+----------+---------+
| Charlie |        103 | 1989-07-12 | Lakeview     | Male   |   9000 |      101 | D2      |
| Alice   |        101 | 1990-01-10 | Rose Villa   | Female |  15000 |     NULL | D1      |
| Bob     |        102 | 1988-02-20 | Sunset House | Male   |  15000 |      101 | D1      |
+---------+------------+------------+--------------+--------+--------+----------+---------+
3 rows in set (0.00 sec)

mysql> SELECT * FROM Employee order by salary desc;
+---------+------------+------------+--------------+--------+--------+----------+---------+
| Name    | EmployeeID | BirthDate  | HouseName    | Gender | Salary | SuperEID | Dnumber |
+---------+------------+------------+--------------+--------+--------+----------+---------+
| Alice   |        101 | 1990-01-10 | Rose Villa   | Female |  15000 |     NULL | D1      |
| Bob     |        102 | 1988-02-20 | Sunset House | Male   |  15000 |      101 | D1      |
| Charlie |        103 | 1989-07-12 | Lakeview     | Male   |   9000 |      101 | D2      |
+---------+------------+------------+--------------+--------+--------+----------+---------+
3 rows in set (0.00 sec)
//////////////////////////////3.2

mysql> SELECT * FROM Employee where Dnumber = 'D2';// not 30
+---------+------------+------------+-----------+--------+--------+----------+---------+
| Name    | EmployeeID | BirthDate  | HouseName | Gender | Salary | SuperEID | Dnumber |
+---------+------------+------------+-----------+--------+--------+----------+---------+
| Charlie |        103 | 1989-07-12 | Lakeview  | Male   |   9000 |      101 | D2      |
+---------+------------+------------+-----------+--------+--------+----------+---------+
1 row in set (0.01 sec)

/////////////////////////////////3.3
mysql> SELECT Name, BirthDate FROM Employee where Dnumber = 'D1';
+-------+------------+
| Name  | BirthDate  |
+-------+------------+
| Alice | 1990-01-10 |
| Bob   | 1988-02-20 |
+-------+------------+
2 rows in set (0.00 sec)

////////////////////////////////3.4
mysql> SELECT
    ->   p.Pnumber,
    ->   p.Dnumber,
    ->   e.Name,
    ->   e.HouseName,
    ->   e.BirthDate
    -> FROM Project AS p
    -> JOIN Department AS d ON p.Dnumber = d.Dnumber
    -> JOIN Employee AS e ON d.ManagerID = e.EmployeeID
    -> WHERE p.Plocation = 'Cochin';
+---------+---------+-------+------------+------------+
| Pnumber | Dnumber | Name  | HouseName  | BirthDate  |
+---------+---------+-------+------------+------------+
| P3      | D1      | Alice | Rose Villa | 1990-01-10 |
+---------+---------+-------+------------+------------+
1 row in set (0.00 sec)

mysql>

////////////////////////////////3.5


mysql> SELECT e.EmployeeID, e.Name, COUNT(*) AS project_count
    -> FROM Works_on w
    -> JOIN Employee e ON w.EmployeeID = e.EmployeeID
    -> GROUP BY e.EmployeeID, e.Name
    -> HAVING COUNT(*) > 1;
+------------+------+---------------+
| EmployeeID | Name | project_count |
+------------+------+---------------+
|        102 | Bob  |             2 |
+------------+------+---------------+
1 row in set (0.00 sec)

///////////////////////////////////5
//////////5.1
mysql> select * from employee where name like "A%";
+-------+------------+------------+------------+--------+--------+----------+---------+
| Name  | EmployeeID | BirthDate  | HouseName  | Gender | Salary | SuperEID | Dnumber |
+-------+------------+------------+------------+--------+--------+----------+---------+
| Alice |        101 | 1990-01-10 | Rose Villa | Female |  15000 |     NULL | D1      |
+-------+------------+------------+------------+--------+--------+----------+---------+
1 row in set (0.01 sec)
//////////////5.2
mysql> select * from employee where birthdate like "__8%";
+------+------------+------------+--------------+--------+--------+----------+---------+
| Name | EmployeeID | BirthDate  | HouseName    | Gender | Salary | SuperEID | Dnumber |
+------+------------+------------+--------------+--------+--------+----------+---------+
| Bob  |        102 | 1988-02-20 | Sunset House | Male   |  15000 |      101 | D1      |
+------+------------+------------+--------------+--------+--------+----------+---------+
1 row in set, 1 warning (0.00 sec)
+---------+---------+-------+------------+------------+
| pnumber | dnumber | name  | HouseName  | BirthDate  |
+---------+---------+-------+------------+------------+
| P1      | D2      | Alice | Rose Villa | 1990-01-10 |
| P3      | D1      | Alice | Rose Villa | 1990-01-10 |
+---------+---------+-------+------------+------------+
2 rows in set (0.00 sec)



//////////////aggregate functions-4.1
mysql> SELECT
    ->     SUM(Salary)   AS total_salary,
    ->     MAX(Salary)   AS highest_salary,
    ->     MIN(Salary)   AS lowest_salary,
    ->     AVG(Salary)   AS average_salary
    -> FROM employee;
+--------------+----------------+---------------+----------------+
| total_salary | highest_salary | lowest_salary | average_salary |
+--------------+----------------+---------------+----------------+
|        39000 |          15000 |          9000 |     13000.0000 |
+--------------+----------------+---------------+----------------+
1 row in set (0.00 sec)
///////////////////////////////////4.2
mysql> SELECT
    ->     d.Dnumber,
    ->     d.Dname,
    ->     COUNT(p.Pnumber) AS project_count
    -> FROM department AS d
    -> LEFT JOIN project AS p
    ->     ON d.Dnumber = p.Dnumber
    -> GROUP BY d.Dnumber, d.Dname;
+---------+------------------+---------------+
| Dnumber | Dname            | project_count |
+---------+------------------+---------------+
| D1      | Computer Science |             1 |
| D2      | IT Support       |             2 |
+---------+------------------+---------------+
2 rows in set (0.01 sec)
///////////////////////////4.3
mysql> SELECT
    ->     d.Dnumber,
    ->     d.Dname,
    ->     COUNT(e.EmployeeID) AS employee_count
    -> FROM department AS d
    -> LEFT JOIN employee AS e
    ->     ON d.Dnumber = e.Dnumber
    -> GROUP BY d.Dnumber, d.Dname;
+---------+------------------+----------------+
| Dnumber | Dname            | employee_count |
+---------+------------------+----------------+
| D1      | Computer Science |              2 |
| D2      | IT Support       |              1 |
+---------+------------------+----------------+
2 rows in set (0.00 sec)
/////////////////////////////4.4
mysql> SELECT
    ->     Dnumber,
    ->     MAX(Salary) AS max_salary
    -> FROM employee
    -> GROUP BY Dnumber
    -> HAVING MIN(Salary) > 10000;
+---------+------------+
| Dnumber | max_salary |
+---------+------------+
| D1      |      15000 |
+---------+------------+
1 row in set (0.00 sec)

\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\UNTIL 5 DONE. 6th is put hold. 7th:

///////////////////6.1
mysql> select Name, BirthDate, TIMESTAMPDIFF(YEAR, BirthDate, CURDATE()) as Age
    -> FROM Employee
    -> WHERE TIMESTAMPDIFF(YEAR, BirthDate, CURDATE()) BETWEEN 25 AND 45;
+---------+------------+------+
| Name    | BirthDate  | Age  |
+---------+------------+------+
| Alice   | 1990-01-10 |   35 |
| Bob     | 1988-02-20 |   37 |
| Charlie | 1989-07-12 |   36 |
+---------+------------+------+
3 rows in set (0.00 sec)
//////////////////////6.2
mysql> SELECT Dnumber, Dname, ManagerID, TIMESTAMPDIFF(YEAR, mgr_start_date, CURDATE()) AS Service_period
    -> from Department;
+---------+------------------+-----------+----------------+
| Dnumber | Dname            | ManagerID | Service_period |
+---------+------------------+-----------+----------------+
| D1      | Computer Science |       101 |              4 |
| D2      | IT Support       |       102 |              3 |
+---------+------------------+-----------+----------------+
2 rows in set (0.00 sec)
///////7.1
mysql> SELECT DISTINCT p.pnumber
    -> FROM project p
    -> JOIN department d ON p.Dnumber = d.Dnumber
    -> JOIN employee e ON d.ManagerID = e.EmployeeID
    -> WHERE e.name = 'Alice'
    -> UNION
    -> SELECT DISTINCT p.Pnumber
    -> FROM project p
    -> JOIN works_on w ON p.Pnumber = w.Pnumber
    -> JOIN employee e ON w.EmployeeID = e.EmployeeID
    -> WHERE e.Name = 'Alice';
+---------+
| pnumber |
+---------+
| P3      |
+---------+
1 row in set (0.00 sec)
////////////////////////////////8.1
mysql> SELECT e.Name
    -> FROM Employee e
    -> JOIN Dependent d
    -> ON e.EmployeeID = d.EmployeeID
    -> AND e.Name = d.DependName
    -> AND e.Gender = d.Sex;
+-------+
| Name  |
+-------+
| Alice |
+-------+
1 row in set (0.00 sec)

////////////////////////////8.2

mysql> SELECT e.Name
    -> FROM Employee e
    -> LEFT JOIN Dependent d
    ->     ON e.EmployeeID = d.EmployeeID
    -> WHERE d.EmployeeID IS NULL;
+---------+
| Name    |
+---------+
| Charlie |
+---------+
1 row in set (0.00 sec)
/////////////////////////////8.3

mysql> SELECT e.Name
    -> FROM employee e
    -> WHERE e.EmployeeID IN (
    ->     SELECT d.ManagerID
    ->     FROM department d
    ->     WHERE d.ManagerID IN (
    ->         SELECT EmployeeID
    ->         FROM dependent
    ->     )
    -> );
+---------+
| Name    |
+---------+
| Alice   |
| Bob     |
| Charlie |
+---------+
3 rows in set (0.00 sec)
///////////////////////////////8.4
mysql> SELECT
    ->     e.Name AS EmployeeName,
    ->     s.Name AS SupervisorName
    -> FROM Employee e
    -> LEFT JOIN Employee s ON e.SuperEID = s.EmployeeID;
+--------------+----------------+
| EmployeeName | SupervisorName |
+--------------+----------------+
| Alice        | NULL           |
| Bob          | Alice          |
| Charlie      | Alice          |
| David        | Alice          |
| Emma         | Bob            |
| Frank        | Alice          |
| Grace        | David          |
| Helen        | Emma           |
+--------------+----------------+
8 rows in set (0.00 sec)


///////////////////////////////9.1
mysql> CREATE VIEW dept_salary_stats AS
    -> SELECT
    -> Dnumber,
    -> MIN(Salary) AS MinSalary,
    -> MAX(Salary) AS MaxSalary,
    -> AVG(Salary) AS AvgSalary
    -> From Employee
    -> GROUP BY Dnumber;
Query OK, 0 rows affected (0.00 sec)

mysql> SELECT * FROM dept_salary_stats;
+---------+-----------+-----------+------------+
| Dnumber | MinSalary | MaxSalary | AvgSalary  |
+---------+-----------+-----------+------------+
| D1      |     15000 |     18000 | 15875.0000 |
| D2      |      9000 |     17000 | 12666.6667 |
| D3      |     20000 |     20000 | 20000.0000 |
+---------+-----------+-----------+------------+
3 rows in set (0.01 sec)
/////////////////////////////////////9.2
mysql> CREATE VIEW emp_project_hours AS
    -> SELECT
    -> e.Name AS EmployeeName,
    -> p.Pname AS ProjectName,
    -> w.Hours
    -> From works_on w
    -> JOIN employee e ON w.EmployeeID = e.EmployeeID
    -> JOIN project p ON w.Pnumber =p.Pnumber;
Query OK, 0 rows affected (0.01 sec)

mysql> select * from emp_project_hours;
mysql> SELECT * FROM emp_project_hours;
+--------------+-------------+-------+
| EmployeeName | ProjectName | Hours |
+--------------+-------------+-------+
| Alice        | IntelliSys  | 10.00 |
| Frank        | IntelliSys  | 12.00 |
| Alice        | IntelliSys  | 10.00 |
| Helen        | IntelliSys  |  7.00 |
| Bob          | Cloud Infra |  8.00 |
| Charlie      | Cloud Infra | 12.00 |
| David        | Cloud Infra | 15.50 |
| Bob          | TestProj    |  5.00 |
| Emma         | TestProj    | 20.00 |
| Grace        | TestProj    | 18.00 |
+--------------+-------------+-------+
10 rows in set (0.00 sec)
/////////////////////////////////////////9.3

mysql> UPDATE Project
    -> SET Pname = 'Product Y'
    -> WHERE Pname = 'ProductX';
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> SELECT * FROM emp_project_hours;
+--------------+-------------+-------+
| EmployeeName | ProjectName | Hours |
+--------------+-------------+-------+
| Alice        | IntelliSys  | 10.00 |
| Frank        | IntelliSys  | 12.00 |
| Bob          | Cloud Infra |  8.00 |
| Charlie      | Cloud Infra | 12.00 |
| David        | Cloud Infra | 15.50 |
| Bob          | TestProj    |  5.00 |
| Emma         | TestProj    | 20.00 |
| Grace        | TestProj    | 18.00 |
| Alice        | Product Y   |  8.00 |
| Helen        | Product Y   |  7.00 |
+--------------+-------------+-------+
10 rows in set (0.00 sec)

/////////////////////////////////////////9.4
mysql> DROP VIEW emp_project_hours;
Query OK, 0 rows affected (0.00 sec)
 SELECT * FROM emp_project_hours;
ERROR 1146 (42S02): Table 'ayushv2.emp_project_hours' doesn't exist
/////////////////////////////////////////9.5
mysql> CREATE VIEW work_info AS
    -> SELECT e.EmployeeID, e.Name AS EmployeeName, w.Pnumber
    -> FROM Employee e
    -> JOIN Works_on w ON e.EmployeeID = w.EmployeeID
    -> WHERE w.Hours > 0;
Query OK, 0 rows affected (0.01 sec)
mysql> SELECT * FROM work_info;
+------------+--------------+---------+
| EmployeeID | EmployeeName | Pnumber |
+------------+--------------+---------+
|        101 | Alice        | P1      |
|        101 | Alice        | P1      |
|        102 | Bob          | P2      |
|        102 | Bob          | P3      |
|        103 | Charlie      | P2      |
|        104 | David        | P2      |
|        105 | Emma         | P3      |
|        106 | Frank        | P1      |
|        107 | Grace        | P3      |
|        108 | Helen        | P1      |
+------------+--------------+---------+
10 rows in set (0.00 sec)
///////////////////////////////////////////////////////10.1
mysql> CREATE PROCEDURE SimplePrimes(IN max_num INT)
    -> BEGIN
    ->     DECLARE i INT;
    ->     DECLARE j INT;
    ->     DECLARE isPrime BOOLEAN;
    ->     DECLARE prime_count INT DEFAULT 0;
    ->     DECLARE primes TEXT DEFAULT '';
    ->
    ->     SET i = 2;
    ->
    ->     WHILE i < max_num DO
    ->         SET isPrime = TRUE;
    ->         SET j = 2;
    ->
    ->         WHILE j <= SQRT(i) DO
    ->             IF MOD(i, j) = 0 THEN
    ->                 SET isPrime = FALSE;
    ->                 SET j = i; -- break inner loop by jumping out
    ->             END IF;
    ->             SET j = j + 1;
    ->         END WHILE;
    ->
    ->         IF isPrime THEN
    ->             SET primes = CONCAT(primes, i, ' ');
    ->             SET prime_count = prime_count + 1;
    ->         END IF;
    ->
    ->         SET i = i + 1;
    ->     END WHILE;
    ->
    ->     -- Show primes
    ->     SELECT primes AS PrimeNumbers, prime_count AS TotalPrimes;
    -> END //
Query OK, 0 rows affected (0.01 sec)

mysql>
mysql> DELIMITER ;
mysql> CALL SimplePrimes(30);
+----------------------------+-------------+
| PrimeNumbers               | TotalPrimes |
+----------------------------+-------------+
| 2 3 5 7 11 13 17 19 23 29  |          10 |
+----------------------------+-------------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.01 sec)

////////////////////////////////////////////////10.2
mysql> create database ayushv3;
Query OK, 1 row affected (0.00 sec)

mysql> use ayushv3;
Database changed
mysql> CREATE TABLE employee (
    ->     emp_id INT PRIMARY KEY,
    ->     ename VARCHAR(50) NOT NULL,
    ->     basic DECIMAL(10,2) NOT NULL,
    ->     dept VARCHAR(50)
    -> );
Query OK, 0 rows affected (0.04 sec)

mysql> INSERT INTO employee (emp_id, ename, basic, dept) VALUES
    -> (101, 'Alice', 15000, 'HR'),
    -> (102, 'Bob', 12000, 'IT'),
    -> (103, 'Charlie', 10000, 'IT'),
    -> (104, 'David', 18000, 'Finance'),
    -> (105, 'Emma', 20000, 'HR'),
    -> (106, 'Frank', 17000, 'IT'),
    -> (107, 'Grace', 16000, 'Finance'),
    -> (108, 'Helen', 14000, 'HR'),
    -> (109, 'Ivy', 13000, 'Finance'),
    -> (110, 'Jack', 11000, 'IT');
Query OK, 10 rows affected (0.01 sec)
Records: 10  Duplicates: 0  Warnings: 0

mysql> DELIMITER //
mysql>
mysql> CREATE PROCEDURE UpdateSalary(
    ->     IN emp INT,
    ->     IN rate DECIMAL(5,2)
    -> )
    -> BEGIN
    ->     -- Update salary
    ->     UPDATE employee
    ->     SET basic = basic + (basic * rate / 100)
    ->     WHERE emp_id = emp;
    ->
    ->     -- Fetch top 5 highest-paid employees
    ->     SELECT ename, basic, dept
    ->     FROM employee
    ->     ORDER BY basic DESC
    ->     LIMIT 5;
    -> END //
Query OK, 0 rows affected (0.00 sec)

mysql>
mysql> DELIMITER ;
mysql> CALL UpdateSalary(102, 10);
+-------+----------+---------+
| ename | basic    | dept    |
+-------+----------+---------+
| Emma  | 20000.00 | HR      |
| David | 18000.00 | Finance |
| Frank | 17000.00 | IT      |
| Grace | 16000.00 | Finance |
| Alice | 15000.00 | HR      |
+-------+----------+---------+
5 rows in set (0.01 sec)

Query OK, 0 rows affected (0.01 sec)
///////////////////////////////////////10.3

mysql> CREATE TABLE Customer (
    ->     cust_id INT PRIMARY KEY,
    ->     cust_name VARCHAR(50) NOT NULL,
    ->     address VARCHAR(100)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql>
mysql> CREATE TABLE COrder (
    ->     ord_no INT PRIMARY KEY,
    ->     cust_id INT,
    ->     ord_date DATE,
    ->     ship_date DATE,
    ->     status ENUM('delivered', 'pending', 'shipped', 'cancelled'),
    ->     comments VARCHAR(255),
    ->     FOREIGN KEY (cust_id) REFERENCES Customer(cust_id)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> -- Customers
mysql> INSERT INTO Customer(cust_id, cust_name, address) VALUES
    -> (1, 'Alice', 'Rose Villa'),
    -> (2, 'Bob', 'Sunset House'),
    -> (3, 'Charlie', 'Lakeview');
Query OK, 3 rows affected (0.00 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql>
mysql> -- Orders
mysql> INSERT INTO COrder(ord_no, cust_id, ord_date, ship_date, status, comments) VALUES
    -> (101, 1, '2025-09-01', '2025-09-05', 'delivered', 'Delivered on time'),
    -> (102, 2, '2025-09-02', NULL, 'pending', 'Awaiting shipment'),
    -> (103, 1, '2025-09-03', '2025-09-06', 'shipped', 'In transit'),
    -> (104, 3, '2025-09-04', NULL, 'cancelled', 'Customer cancelled'),
    -> (105, 2, '2025-09-05', '2025-09-07', 'delivered', 'Delivered late'),
    -> (106, 3, '2025-09-06', NULL, 'pending', 'Payment pending');
Query OK, 6 rows affected (0.00 sec)
Records: 6  Duplicates: 0  Warnings: 0

mysql> DELIMITER //
mysql>
mysql> CREATE PROCEDURE COrderStatusCount()
    -> BEGIN
    ->     SELECT
    ->         SUM(CASE WHEN status = 'delivered' THEN 1 ELSE 0 END) AS Delivered,
    ->         SUM(CASE WHEN status = 'pending' THEN 1 ELSE 0 END) AS Pending,
    ->         SUM(CASE WHEN status = 'shipped' THEN 1 ELSE 0 END) AS Shipped,
    ->         SUM(CASE WHEN status = 'cancelled' THEN 1 ELSE 0 END) AS Cancelled
    ->     FROM COrder;
    -> END //
Query OK, 0 rows affected (0.00 sec)

mysql>
mysql> DELIMITER ;
mysql> CALL COrderStatusCount();
+-----------+---------+---------+-----------+
| Delivered | Pending | Shipped | Cancelled |
+-----------+---------+---------+-----------+
|         2 |       2 |       1 |         1 |
+-----------+---------+---------+-----------+
1 row in set (0.00 sec)

Query OK, 0 rows affected (0.01 sec)
//////////////////////////////////////////10.4
mysql> CREATE FUNCTION factorial(n INT) RETURNS BIGINT
    -> DETERMINISTIC
    -> BEGIN
    ->     DECLARE result BIGINT DEFAULT 1;
    ->     DECLARE i INT DEFAULT 1;
    ->
    ->     IF n < 0 THEN
    ->         RETURN NULL; -- Factorial not defined for negative numbers
    ->     END IF;
    ->
    ->     WHILE i <= n DO
    ->         SET result = result * i;
    ->         SET i = i + 1;
    ->     END WHILE;
    ->
    ->     RETURN result;
    -> END //
Query OK, 0 rows affected (0.00 sec)

mysql>
mysql> DELIMITER ;
mysql> SELECT factorial(5) AS FactorialResult;
+-----------------+
| FactorialResult |
+-----------------+
|             120 |
+-----------------+
1 row in set (0.01 sec)
///////////////////////////////////////////////10.5
mysql> CREATE FUNCTION check_number_type(n INT) RETURNS VARCHAR(20)
    -> DETERMINISTIC
    -> BEGIN
    ->     DECLARE sum_div INT DEFAULT 0;
    ->     DECLARE i INT DEFAULT 1;
    ->
    ->     -- Sum of proper divisors
    ->     WHILE i < n DO
    ->         IF n % i = 0 THEN
    ->             SET sum_div = sum_div + i;
    ->         END IF;
    ->         SET i = i + 1;
    ->     END WHILE;
    ->
    ->     -- Classify the number
    ->     IF sum_div = n THEN
    ->         RETURN 'Perfect';
    ->     ELSEIF sum_div > n THEN
    ->         RETURN 'Abundant';
    ->     ELSE
    ->         RETURN 'Deficient';
    ->     END IF;
    -> END //
Query OK, 0 rows affected (0.00 sec)

mysql>
mysql> DELIMITER ;
mysql> SELECT 6 AS Number, check_number_type(6) AS Type;
+--------+---------+
| Number | Type    |
+--------+---------+
|      6 | Perfect |
+--------+---------+
1 row in set (0.00 sec)

mysql> SELECT 12 AS Number, check_number_type(12) AS Type;
+--------+----------+
| Number | Type     |
+--------+----------+
|     12 | Abundant |
+--------+----------+
1 row in set (0.00 sec)

mysql> SELECT 8 AS Number, check_number_type(8) AS Type;
+--------+-----------+
| Number | Type      |
+--------+-----------+
|      8 | Deficient |
+--------+-----------+
1 row in set (0.00 sec)
////////////////////////////////////////////////11.1

mysql> CREATE TABLE Student (
    ->     id INT PRIMARY KEY,
    ->     name VARCHAR(50),
    ->     dob DATE
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql>
mysql> INSERT INTO Student (id, name, dob) VALUES
    -> (1, 'Alice', '2000-01-10'),
    -> (2, 'Bob', '2001-05-15'),
    -> (3, 'Charlie', '2002-08-20');
Query OK, 3 rows affected (0.00 sec)
Records: 3  Duplicates: 0  Warnings: 0

mysql> select * from student;
+----+---------+------------+
| id | name    | dob        |
+----+---------+------------+
|  1 | Alice   | 2000-01-10 |
|  2 | Bob     | 2001-05-15 |
|  3 | Charlie | 2002-08-20 |
+----+---------+------------+
3 rows in set (0.00 sec)



mysql> DELIMITER //
mysql>
mysql> -- Prevent UPDATE
mysql> CREATE TRIGGER prevent_student_update
    -> BEFORE UPDATE ON Student
    -> FOR EACH ROW
    -> BEGIN
    ->     SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Update not allowed on Student table';
    -> END//
Query OK, 0 rows affected (0.00 sec)

mysql>
mysql> -- Prevent DELETE
mysql> CREATE TRIGGER prevent_student_delete
    -> BEFORE DELETE ON Student
    -> FOR EACH ROW
    -> BEGIN
    ->     SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Delete not allowed on Student table';
    -> END//
Query OK, 0 rows affected (0.01 sec)

mysql>
mysql> DELIMITER ;
mysql> UPDATE Student SET name='John' WHERE id=1;
ERROR 1644 (45000): Update not allowed on Student table
mysql> -- Error: Update not allowed on Student table
mysql>
mysql> DELETE FROM Student WHERE id=2;
ERROR 1644 (45000): Delete not allowed on Student table
mysql> -- Error: Delete not allowed on Student table
mysql>


/////////////////////////////////////////////////11.2
mysql> -- Product table
mysql> CREATE TABLE Product (
    ->     prod_id INT PRIMARY KEY,
    ->     prod_name VARCHAR(50),
    ->     price DECIMAL(10,2),
    ->     quantity_available INT
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql>
mysql> -- Sale table
mysql> CREATE TABLE Sale (
    ->     sale_id INT PRIMARY KEY,
    ->     prod_id INT,
    ->     quantity INT,
    ->     FOREIGN KEY (prod_id) REFERENCES Product(prod_id)
    -> );
Query OK, 0 rows affected (0.02 sec)
mysql>
mysql> INSERT INTO Sale (sale_id, prod_id, quantity) VALUES
    -> (1, 1, 2),
    -> (2, 2, 5);
Query OK, 2 rows affected (0.00 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql>
mysql> INSERT INTO Sale (sale_id, prod_id, quantity) VALUES
    -> (1, 1, 2),
    -> (2, 2, 5);
Query OK, 2 rows affected (0.00 sec)
Records: 2  Duplicates: 0  Warnings: 0

mysql> DELIMITER //
mysql>
mysql> CREATE TRIGGER update_quantity_after_sale
    -> AFTER INSERT ON Sale
    -> FOR EACH ROW
    -> BEGIN
    ->     UPDATE Product
    ->     SET quantity_available = quantity_available - NEW.quantity
    ->     WHERE prod_id = NEW.prod_id;
    -> END;
    -> //
Query OK, 0 rows affected (0.00 sec)

mysql>
mysql> DELIMITER ;
mysql>
mysql>
mysql> DELIMITER ;
mysql> SELECT * FROM Product;
+---------+-----------+----------+--------------------+
| prod_id | prod_name | price    | quantity_available |
+---------+-----------+----------+--------------------+
|       1 | Laptop    | 50000.00 |                 10 |
|       2 | Keyboard  |  1500.00 |                 50 |
|       3 | Mouse     |   800.00 |                100 |
+---------+-----------+----------+--------------------+
3 rows in set (0.00 sec)

mysql> -- Insert a new sale
mysql> INSERT INTO Sale (sale_id, prod_id, quantity) VALUES (3, 3, 10);
Query OK, 1 row affected (0.01 sec)

mysql>
mysql> -- Check product quantities
mysql> SELECT * FROM Product;
+---------+-----------+----------+--------------------+
| prod_id | prod_name | price    | quantity_available |
+---------+-----------+----------+--------------------+
|       1 | Laptop    | 50000.00 |                 10 |
|       2 | Keyboard  |  1500.00 |                 50 |
|       3 | Mouse     |   800.00 |                 90 |
+---------+-----------+----------+--------------------+
3 rows in set (0.00 sec)
////////////////////////////////////////////////11.3
mysql> DROP TRIGGER IF EXISTS prevent_student_update;
Query OK, 0 rows affected, 1 warning (0.00 sec)

mysql> DROP TRIGGER IF EXISTS prevent_student_delete;
Query OK, 0 rows affected, 1 warning (0.00 sec)





